"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* Assigned value by JavaScript Virtual Machines (V8 or JavaScriptCore)? */
function setHintColor(args) {
    /* NativeScript makes native objects available via a android property =>  args.view.android refers to a TextView, and therefore has the setHintTextColor() method */
    if (args.view.android) {
        args.view.android.setHintTextColor(args.color.android);
    }
    if (args.view.ios) {
        var dictionary = new NSDictionary([args.color.ios], [NSForegroundColorAttributeName]);
        args.view.ios.attributedPlaceholder = NSAttributedString.alloc().initWithStringAttributes(args.view.hint, dictionary);
    }
}
exports.setHintColor = setHintColor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC11dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaGludC11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBZUEsMkVBQTJFO0FBRTNFLHNCQUE2QixJQUF1QztJQUNoRSxvS0FBb0s7SUFFcEssRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLFVBQVUsR0FBRyxJQUFJLFlBQVksQ0FDN0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUNoQixDQUFDLDhCQUE4QixDQUFDLENBQ25DLENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQyx3QkFBd0IsQ0FDckYsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDcEMsQ0FBQztBQUNMLENBQUM7QUFkRCxvQ0FjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XHJcbmltcG9ydCB7IFRleHRGaWVsZCB9IGZyb20gXCJ1aS90ZXh0LWZpZWxkXCI7XHJcblxyXG4vKiBUaGUgVHlwZVNjcmlwdCBkZWNsYXJlIGtleXdvcmQgaXMgdXNlZCB0byBkZWNsYXJlIHZhcmlhYmxlcyB0aGF0IG1heSBub3QgaGF2ZSBvcmlnaW5hdGVkIGZyb20gYSBUeXBlU2NyaXB0IGZpbGUuICovXHJcblxyXG4vKlxyXG5cImRlY2xhcmUgdmFyIG15TGlicmFyeTogYW55O1wiIHByb2R1Y2VzIGRpZmZlcmVudCBvdXRwdXQgdGhhbiBcInZhciBteUxpYnJhcnk6IGFueVwiO1xyXG5cclxuVGhlIG9uZSB3aGljaCB1c2VzIGBkZWNsYXJlYCBhY3R1YWxseSBwcm9kdWNlcyBOTyBvdXRwdXQgd2hpY2ggaXMgd2hhdCB5b3Ugd2FudCB3aGVuIHlvdSBuZWVkIHRvIHNpbGVuY2UgdGhlIGNvbXBpbGVyIGluIG9yZGVyIHRvIHVzZSBhIGxpYnJhcnkgd2l0aCBubyB0eXBlIGRlZmluaXRpb24gZmlsZS5cclxuXHJcbklmIGRvbuKAmXQgdXNlIGBkZWNsYXJlYCB0aGVuIFRTIG91dHB1dHMgXCJ2YXIgbXlMaWJyYXJ5OiBhbnlcIiB3aGljaCB3aWxsIG92ZXJ3cml0ZSB0aGUgYWN0dWFsIGxpYnJhcnksIHdoaWNoIGlzIG5vdCB3aGF0IHlvdSB1c3VhbGx5IHdhbnQuIFxyXG4qL1xyXG5kZWNsYXJlIHZhciBOU0F0dHJpYnV0ZWRTdHJpbmc6IGFueTtcclxuZGVjbGFyZSB2YXIgTlNEaWN0aW9uYXJ5OiBhbnk7XHJcbmRlY2xhcmUgdmFyIE5TRm9yZWdyb3VuZENvbG9yQXR0cmlidXRlTmFtZTogYW55O1xyXG4vKiBBc3NpZ25lZCB2YWx1ZSBieSBKYXZhU2NyaXB0IFZpcnR1YWwgTWFjaGluZXMgKFY4IG9yIEphdmFTY3JpcHRDb3JlKT8gKi9cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRIaW50Q29sb3IoYXJnczogeyB2aWV3OiBUZXh0RmllbGQsIGNvbG9yOiBDb2xvciB9KSB7XHJcbiAgICAvKiBOYXRpdmVTY3JpcHQgbWFrZXMgbmF0aXZlIG9iamVjdHMgYXZhaWxhYmxlIHZpYSBhIGFuZHJvaWQgcHJvcGVydHkgPT4gIGFyZ3Mudmlldy5hbmRyb2lkIHJlZmVycyB0byBhIFRleHRWaWV3LCBhbmQgdGhlcmVmb3JlIGhhcyB0aGUgc2V0SGludFRleHRDb2xvcigpIG1ldGhvZCAqL1xyXG5cclxuICAgIGlmIChhcmdzLnZpZXcuYW5kcm9pZCkgeyAvL3J1bnMgb25seSBmb3IgYW5kcm9pZFxyXG4gICAgICAgIGFyZ3Mudmlldy5hbmRyb2lkLnNldEhpbnRUZXh0Q29sb3IoYXJncy5jb2xvci5hbmRyb2lkKTtcclxuICAgIH1cclxuICAgIGlmIChhcmdzLnZpZXcuaW9zKSB7IC8vcnVucyBvbmx5IGZvciBpb3NcclxuICAgICAgICBsZXQgZGljdGlvbmFyeSA9IG5ldyBOU0RpY3Rpb25hcnkoXHJcbiAgICAgICAgICAgIFthcmdzLmNvbG9yLmlvc10sXHJcbiAgICAgICAgICAgIFtOU0ZvcmVncm91bmRDb2xvckF0dHJpYnV0ZU5hbWVdXHJcbiAgICAgICAgKTtcclxuICAgICAgICBhcmdzLnZpZXcuaW9zLmF0dHJpYnV0ZWRQbGFjZWhvbGRlciA9IE5TQXR0cmlidXRlZFN0cmluZy5hbGxvYygpLmluaXRXaXRoU3RyaW5nQXR0cmlidXRlcyhcclxuICAgICAgICAgICAgYXJncy52aWV3LmhpbnQsIGRpY3Rpb25hcnkpO1xyXG4gICAgfVxyXG59Il19